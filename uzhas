#include <iostream>
#include <vector>
#include <numeric>
#include <stack>
#include <set>
#include <map>

void bin_search(std::vector<int>& a, int& to_find) 
{

	int left = 0, right = a.size() - 1, mid = (left + right) / 2;
	int i = 0;
	bool in_vec = 0;
	while (left + 1 < right)
	{
		if (to_find == a[mid]) {
			in_vec = 1;
			i = mid;
			break;
		}
		else if (to_find < a[mid]) {
			right = mid;
			mid = (left + right) / 2;
		}
		else {
			left = mid;
			mid = (left + right) / 2;
		}
	}
	if (in_vec) {
		std::cout<<"Yes";
	}
	else {
		std::cout << "No";
	}
}

void sort_bubble(std::vector<int> b) {
	bool if_sort = 0;
	for (int i = 0; i < b.size(); i += 1) {
		for (int j = 0; j < b.size() - 1 - i; j += 1) {
			if (b[j] > b[j + 1]) {
				std::swap(b[j], b[j + 1]);
			}
		}
	}
	for (int k = 0; k < b.size(); k += 1) {
		std::cout << b[k] << " ";
	}
}

void shake_sort(std::vector<int> b)
{
	int l = 0, r = b.size() - 1;
	while (l <= r) {
		for (int i = l; i < r; i+=1 ) {
			if (b[i] > b[i + 1]) {
				std::swap(b[i], b[i + 1]);
			}
		}
		r -= 1;
		for (int j = r; j > l; j+=1 ) {
			if (b[j - 1] > b[j]) {
				std::swap(b[j - 1], b[j]);
			}
		}
		l += 1;
	}
	for (int k = 0; k < b.size(); k += 1) {
		std::cout << b[k] << " ";
	}
}


int main()
{
	std::vector<int> t = { 1,2,3,5,6,7,9,10, 11, 15 };
	int find;
	std::vector<int> t_2 = { 1, 5, 2, 56, 23557,32, 90, 1545566 };
	//shake_sort(t_2);
	//std::cin >> find;
	//bin_search(t, find);
	int n = 0;
	std::map<int, char> trymap;
	for (int j = 0; j < 6; j += 1) {
		int key;
		char value;
		std::cin >> key >> value;
		trymap.emplace(key, value);
	}
	for (auto t : trymap) {
		std::cout << t.first << " " << t.second;

	}


}
